plugins {
    id "com.jfrog.bintray" version "1.8.4"
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven-publish'
apply plugin: 'maven'

android {

    compileSdkVersion rootProject.ext.sdkVersion

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion rootProject.ext.sdkVersion
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

ext {
    exoPlayerVersion = "2.8.3"
    libraryVersion = '1.0.0'
    publishedGroupId = 'com.redmadrobot.gallery'
    artifact = 'android-gallery'
}

dependencies {

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // Androidx
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    implementation 'androidx.core:core-ktx:1.0.1'
    // Photo view
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    // Video player
    implementation "com.google.android.exoplayer:exoplayer-core:$exoPlayerVersion"
    implementation "com.google.android.exoplayer:exoplayer-ui:$exoPlayerVersion"
    // Image loader
    implementation 'com.github.bumptech.glide:glide:4.7.1'
}

// Uploading

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintrayUser")
    key = properties.getProperty("bintrayApiKey")
    publications = ['GalleryPublication']
    pkg {
        repo = 'android-maven'
        name = 'android-gallery'
        userOrg = 'rmrspb'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/redmadrobot-spb/android-gallery.git'

        version {
            name = '1.0.0'
        }
    }
}

//pomconfig for publishinig in maven central

def pomConfig = {
    licenses {
        license {
            name "MIT license"
            url "http://www.opensource.org/licenses/mit-license.php"
            distribution "repo"
        }
    }

    developers {
        developer {
//            developer info here
        }
    }

    scm {
        url "https://github.com/redmadrobot-spb/android-gallery.git"
    }
}

publishing {
    publications {
        GalleryPublication(MavenPublication) {
            groupId 'com.redmadrobot.gallery'
            artifactId 'android-gallery'
            version '1.0.0'

            artifact("$buildDir/outputs/aar/gallery-release.aar")
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                def root = asNode()
                def dependenciesNode = root.appendNode('dependencies')
                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
                root.children().first() + pomConfig
            }
        }
    }
}

// Tasks for sources and javadocs jars
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

